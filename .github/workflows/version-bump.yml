name: Version Bump

on:
  workflow_dispatch:
    inputs:
      bump_type:
        description: 'Version bump type'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
          - prerelease
      prerelease_id:
        description: 'Pre-release identifier (e.g., beta, alpha, rc)'
        required: false
        type: string
        default: 'beta'
      commit_and_tag:
        description: 'Create commit and tag'
        required: true
        type: boolean
        default: true

jobs:
  bump-version:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0
    
    - name: Configure Git
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Get current version
      id: current_version
      run: |
        CURRENT_VERSION=$(node -p "require('./package.json').version")
        echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        echo "Current version: $CURRENT_VERSION"
    
    - name: Bump version
      id: bump
      run: |
        if [[ "${{ inputs.bump_type }}" == "prerelease" ]]; then
          npm version prerelease --preid="${{ inputs.prerelease_id }}" --no-git-tag-version
        else
          npm version ${{ inputs.bump_type }} --no-git-tag-version
        fi
        
        NEW_VERSION=$(node -p "require('./package.json').version")
        echo "new_version=$NEW_VERSION" >> $GITHUB_OUTPUT
        echo "New version: $NEW_VERSION"
    
    - name: Update VS Code extension version
      run: |
        # vsce requires version to be updated in package.json
        echo "Version in package.json has been updated to ${{ steps.bump.outputs.new_version }}"
    
    - name: Run tests
      run: npm test
    
    - name: Commit and tag
      if: inputs.commit_and_tag
      run: |
        git add package.json package-lock.json
        git commit -m "chore: bump version to ${{ steps.bump.outputs.new_version }}"
        git tag -a "v${{ steps.bump.outputs.new_version }}" -m "Version ${{ steps.bump.outputs.new_version }}"
    
    - name: Push changes
      if: inputs.commit_and_tag
      run: |
        git push origin HEAD
        git push origin "v${{ steps.bump.outputs.new_version }}"
    
    - name: Create pull request
      if: "!inputs.commit_and_tag"
      uses: peter-evans/create-pull-request@v6
      with:
        title: "chore: bump version to ${{ steps.bump.outputs.new_version }}"
        body: |
          ## Version Bump
          
          This PR bumps the version from `${{ steps.current_version.outputs.version }}` to `${{ steps.bump.outputs.new_version }}`.
          
          ### Type: ${{ inputs.bump_type }}
          
          After merging this PR, create a new tag:
          ```bash
          git tag -a "v${{ steps.bump.outputs.new_version }}" -m "Version ${{ steps.bump.outputs.new_version }}"
          git push origin "v${{ steps.bump.outputs.new_version }}"
          ```
        branch: version-bump-${{ steps.bump.outputs.new_version }}
        commit-message: "chore: bump version to ${{ steps.bump.outputs.new_version }}"
    
    - name: Summary
      run: |
        echo "## Version Bump Summary" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Previous version:** ${{ steps.current_version.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **New version:** ${{ steps.bump.outputs.new_version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Bump type:** ${{ inputs.bump_type }}" >> $GITHUB_STEP_SUMMARY
        if [[ "${{ inputs.bump_type }}" == "prerelease" ]]; then
          echo "- **Pre-release ID:** ${{ inputs.prerelease_id }}" >> $GITHUB_STEP_SUMMARY
        fi
        echo "" >> $GITHUB_STEP_SUMMARY
        if [[ "${{ inputs.commit_and_tag }}" == "true" ]]; then
          echo "✅ Version has been bumped and tagged. The release workflow will be triggered automatically." >> $GITHUB_STEP_SUMMARY
        else
          echo "📝 A pull request has been created for the version bump." >> $GITHUB_STEP_SUMMARY
        fi